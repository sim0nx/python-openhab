name: Run tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: |
          python3 -m pip install uv
          uv sync --extra test
          
          docker run -d --name openhab -p 8080:8080 -e OPENHAB_HTTP_PORT=8080 -v ${{ github.workspace }}/docker/openhab_conf:/openhab/conf "openhab/openhab:latest"
          uv run docker/test_connectivity.py
          docker exec -i openhab /openhab/runtime/bin/client -v -p habopen users add admin admin administrator || true
          sleep 2

          uv run coverage run --omit tests --parallel-mode -m pytest -vv tests
          ls -la

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .coverage.*
          if-no-files-found: ignore


  coverage:
    name: Combine & check coverage.
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_LATEST}}

      - run: python -m pip install --upgrade coverage[toml]

      - uses: actions/download-artifact@v4
        with:
          name: coverage-data

      - name: Combine coverage & create xml report
        run: |
          python -m coverage combine
          python -m coverage xml
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./coverage.xml


  lint_python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_LATEST}}

      - run: python -m pip install --upgrade pip wheel
      - run: python -m pip install -e .[dev]

      - name: mypy
        run: mypy --config-file pyproject.toml openhab
